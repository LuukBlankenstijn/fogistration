-- Generated by cmd/schema-builder/main.go DO NOT EDIT MANUALLY
-- Migration: 001_domjudge.sql
-- Write your migrate up statements here
--
---- Contests table
CREATE TABLE IF NOT EXISTS contests (
    id INTEGER PRIMARY KEY,
    external_id VARCHAR NOT NULL,
    formal_name VARCHAR NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    hash VARCHAR NOT NULL
);

-- Teams table  
CREATE TABLE IF NOT EXISTS teams (
    id INTEGER PRIMARY KEY,
    external_id VARCHAR NOT NULL,
    name VARCHAR NOT NULL,
    display_name VARCHAR,
    ip VARCHAR,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    hash VARCHAR NOT NULL
);

CREATE UNIQUE INDEX IF NOT EXISTS unique_ip_not_null ON teams (ip) WHERE ip IS NOT NULL;

-- Users table
CREATE TABLE IF NOT EXISTS users (
    id VARCHAR PRIMARY KEY,
    name VARCHAR NOT NULL,
    team_id INTEGER REFERENCES teams (id),
    ip VARCHAR,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    hash VARCHAR NOT NULL
);

-- Contest-Team relationship (many-to-many)
CREATE TABLE IF NOT EXISTS contest_teams (
    contest_id INTEGER REFERENCES contests (id) ON DELETE CASCADE,
    team_id INTEGER REFERENCES teams (id) ON DELETE CASCADE,
    PRIMARY KEY (contest_id, team_id)
);

-- Indexes for performance
CREATE INDEX IF NOT EXISTS idx_users_team_id ON users (team_id);
CREATE INDEX IF NOT EXISTS idx_contest_teams_contest_id ON contest_teams (contest_id);
CREATE INDEX IF NOT EXISTS idx_contest_teams_team_id ON contest_teams (team_id);

-- Migration: 002_commands.sql
-- Write your migrate up statements here
CREATE TABLE message_queue (
    id SERIAL PRIMARY KEY,
    command_type VARCHAR NOT NULL,
    payload JSONB NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Trigger for notifications
CREATE OR REPLACE FUNCTION notify_new_command()
RETURNS TRIGGER AS $$
BEGIN
    PERFORM pg_notify('new_command', '');
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_notify_new_command
    AFTER INSERT ON message_queue
    FOR EACH ROW
    EXECUTE FUNCTION notify_new_command();

-- Migration: 003_client.sql
-- Write your migrate up statements here
CREATE TABLE clients (
    id SERIAL PRIMARY KEY,
    ip VARCHAR NOT NULL UNIQUE,
    last_seen TIMESTAMP NOT NULL DEFAULT NOW(),
    created_at TIMESTAMP DEFAULT NOW()
);

