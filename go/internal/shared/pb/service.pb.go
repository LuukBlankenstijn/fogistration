// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Client-to-Server messages
type ClientMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ClientMessage_Register
	//	*ClientMessage_Heartbeat
	Message       isClientMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMessage) GetMessage() isClientMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ClientMessage) GetRegister() *Register {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Register); ok {
			return x.Register
		}
	}
	return nil
}

func (x *ClientMessage) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

type isClientMessage_Message interface {
	isClientMessage_Message()
}

type ClientMessage_Register struct {
	Register *Register `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type ClientMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,2,opt,name=heartbeat,proto3,oneof"`
}

func (*ClientMessage_Register) isClientMessage_Message() {}

func (*ClientMessage_Heartbeat) isClientMessage_Message() {}

type Register struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Register) Reset() {
	*x = Register{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *Register) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

// Server-to-Client messages
type ServerMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ServerMessage_SetTeam
	Message       isServerMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *ServerMessage) GetMessage() isServerMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ServerMessage) GetSetTeam() *SetTeam {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_SetTeam); ok {
			return x.SetTeam
		}
	}
	return nil
}

type isServerMessage_Message interface {
	isServerMessage_Message()
}

type ServerMessage_SetTeam struct {
	SetTeam *SetTeam `protobuf:"bytes,1,opt,name=setTeam,proto3,oneof"`
}

func (*ServerMessage_SetTeam) isServerMessage_Message() {}

type SetTeam struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Name          string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ImageUrl      string                  `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTeam) Reset() {
	*x = SetTeam{}
	mi := &file_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTeam) ProtoMessage() {}

func (x *SetTeam) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTeam.ProtoReflect.Descriptor instead.
func (*SetTeam) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *SetTeam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetTeam) GetDisplayName() *wrapperspb.StringValue {
	if x != nil {
		return x.DisplayName
	}
	return nil
}

func (x *SetTeam) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\x0ffogistration.v1\x1a\x1egoogle/protobuf/wrappers.proto\"\x8f\x01\n" +
	"\rClientMessage\x127\n" +
	"\bregister\x18\x01 \x01(\v2\x19.fogistration.v1.RegisterH\x00R\bregister\x12:\n" +
	"\theartbeat\x18\x02 \x01(\v2\x1a.fogistration.v1.HeartbeatH\x00R\theartbeatB\t\n" +
	"\amessage\"\x1a\n" +
	"\bRegister\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\"\v\n" +
	"\tHeartbeat\"P\n" +
	"\rServerMessage\x124\n" +
	"\asetTeam\x18\x01 \x01(\v2\x18.fogistration.v1.SetTeamH\x00R\asetTeamB\t\n" +
	"\amessage\"{\n" +
	"\aSetTeam\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12?\n" +
	"\fdisplay_name\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\vdisplayName\x12\x1b\n" +
	"\timage_url\x18\x03 \x01(\tR\bimageUrl2c\n" +
	"\x13FogistrationService\x12L\n" +
	"\x06Stream\x12\x1e.fogistration.v1.ClientMessage\x1a\x1e.fogistration.v1.ServerMessage(\x010\x01B\xbd\x01\n" +
	"\x13com.fogistration.v1B\fServiceProtoP\x01Z;github.com/LuukBlankenstijn/fogistration/internal/shared/pb\xa2\x02\x03FXX\xaa\x02\x0fFogistration.V1\xca\x02\x0fFogistration\\V1\xe2\x02\x1bFogistration\\V1\\GPBMetadata\xea\x02\x10Fogistration::V1b\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_service_proto_goTypes = []any{
	(*ClientMessage)(nil),          // 0: fogistration.v1.ClientMessage
	(*Register)(nil),               // 1: fogistration.v1.Register
	(*Heartbeat)(nil),              // 2: fogistration.v1.Heartbeat
	(*ServerMessage)(nil),          // 3: fogistration.v1.ServerMessage
	(*SetTeam)(nil),                // 4: fogistration.v1.SetTeam
	(*wrapperspb.StringValue)(nil), // 5: google.protobuf.StringValue
}
var file_service_proto_depIdxs = []int32{
	1, // 0: fogistration.v1.ClientMessage.register:type_name -> fogistration.v1.Register
	2, // 1: fogistration.v1.ClientMessage.heartbeat:type_name -> fogistration.v1.Heartbeat
	4, // 2: fogistration.v1.ServerMessage.setTeam:type_name -> fogistration.v1.SetTeam
	5, // 3: fogistration.v1.SetTeam.display_name:type_name -> google.protobuf.StringValue
	0, // 4: fogistration.v1.FogistrationService.Stream:input_type -> fogistration.v1.ClientMessage
	3, // 5: fogistration.v1.FogistrationService.Stream:output_type -> fogistration.v1.ServerMessage
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_service_proto_msgTypes[0].OneofWrappers = []any{
		(*ClientMessage_Register)(nil),
		(*ClientMessage_Heartbeat)(nil),
	}
	file_service_proto_msgTypes[3].OneofWrappers = []any{
		(*ServerMessage_SetTeam)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
