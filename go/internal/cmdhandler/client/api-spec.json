{
    "openapi": "3.0.0",
    "info": {
        "title": "DOMjudge",
        "description": "DOMjudge API v4",
        "contact": {
            "name": "DOMjudge development team (not the administrator of this instance)",
            "url": "https://github.com/DOMjudge/domjudge/issues/new/choose",
            "email": "development@domjudge.org"
        },
        "license": {
            "name": "GPL2",
            "url": "https://raw.githubusercontent.com/DOMjudge/domjudge/main/COPYING"
        },
        "version": "9.0.0DEV/47efe690d"
    },
    "servers": [
        {
            "url": "http://localhost:12345",
            "description": "API used at this contest"
        },
        {
            "url": "https://www.domjudge.org/demoweb",
            "description": "New API in development"
        }
    ],
    "paths": {
        "/api/v4/contests/{cid}/access": {
            "get": {
                "tags": [
                    "Access"
                ],
                "summary": "Get access information",
                "operationId": "get_v4_app_api_access_getstatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access information for the given contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Access"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get all the accounts.",
                "operationId": "get_v4_app_api_account_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "description": "Only show accounts for the given team",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the accounts for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/accounts/{id}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get the given account.",
                "operationId": "get_v4_app_api_account_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/account": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get information about the currently logged in account.",
                "operationId": "get_v4_app_api_account_getcurrent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the logged in account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/awards": {
            "get": {
                "tags": [
                    "Awards"
                ],
                "summary": "Get all the awards standings for this contest.",
                "operationId": "get_v4_app_api_awards_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the current teams qualifying for each award",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Award"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/awards/{id}": {
            "get": {
                "tags": [
                    "Awards"
                ],
                "summary": "Get the specific award for this contest.",
                "operationId": "get_v4_app_api_awards_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the award for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Award"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/balloons": {
            "get": {
                "tags": [
                    "Balloons"
                ],
                "summary": "Get all the balloons for this contest.",
                "operationId": "get_v4_app_api_balloon_list",
                "parameters": [
                    {
                        "name": "todo",
                        "in": "query",
                        "description": "Only show balloons not handed out yet.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the balloons for this contest.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Balloon"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/balloons/{balloonId}/done": {
            "post": {
                "tags": [
                    "Balloons"
                ],
                "summary": "Mark a specific balloon as done.",
                "operationId": "post_v4_app_api_balloon_markdone",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/balloonId"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The balloon was now marked as done or already marked as such."
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/clarifications": {
            "get": {
                "tags": [
                    "Clarifications"
                ],
                "summary": "Get all the clarifications for this contest.",
                "description": "Note that we restrict the returned clarifications in the query builder.",
                "operationId": "get_v4_app_api_clarification_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "problem",
                        "in": "query",
                        "description": "Only show clarifications for the given problem",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the clarifications for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Clarification"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Clarifications"
                ],
                "summary": "Add a clarification to this contest",
                "operationId": "post_v4_app_api_clarification_add",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ClarificationPost"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "When creating a clarification was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Clarification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/clarifications/{id}": {
            "get": {
                "tags": [
                    "Clarifications"
                ],
                "summary": "Get the given clarifications for this contest.",
                "description": "Note that we restrict the returned clarifications based on the user's role.\nAdmin and api_reader get everything, anonymous gets only general clarifications,\nteam user gets general clarifications plus those sent from or to the team.",
                "operationId": "get_v4_app_api_clarification_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given clarification for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Clarification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Clarifications"
                ],
                "summary": "Add a clarification to this contest",
                "operationId": "put_v4_app_api_clarification_add_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ClarificationPost"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "When creating a clarification was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Clarification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Get all the contests.",
                "operationId": "get_v4_app_api_contest_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "onlyActive",
                        "in": "query",
                        "description": "Whether to only return data pertaining to contests that are active",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all contests visible to the user (all contests for privileged users, active contests otherwise)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contest"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Contests"
                ],
                "summary": "Add a new contest.",
                "operationId": "post_v4_app_api_contest_addcontest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "yaml": {
                                        "description": "The contest.yaml file to import.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "json": {
                                        "description": "The contest.json file to import.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the API ID of the added contest."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Get the given contest.",
                "operationId": "get_v4_app_api_contest_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contest"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Contests"
                ],
                "summary": "Change the start time or unfreeze (thaw) time of the given contest.",
                "operationId": "patch_v4_app_api_contest_changestarttime",
                "parameters": [
                    {
                        "name": "cid",
                        "in": "path",
                        "description": "The ID of the contest to change the start time for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchContest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "The change was successful"
                    },
                    "200": {
                        "description": "Contest start time changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contest"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/banner": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Get the banner for the given contest.",
                "operationId": "get_v4_contest_banner",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given contest banner in PNG, JPG or SVG format",
                        "content": {
                            "image/png": {},
                            "image/jpeg": {},
                            "image/svg+xml": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Contests"
                ],
                "summary": "Set the banner for the given contest.",
                "operationId": "put_v4_put_contest_banner",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "banner"
                                ],
                                "properties": {
                                    "banner": {
                                        "description": "The banner to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting banner succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Contests"
                ],
                "summary": "Set the banner for the given contest.",
                "operationId": "post_v4_post_contest_banner",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "banner"
                                ],
                                "properties": {
                                    "banner": {
                                        "description": "The banner to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting banner succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Contests"
                ],
                "summary": "Delete the banner for the given contest.",
                "operationId": "delete_v4_delete_contest_banner",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleting banner succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/problemset": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Get the problemset document for the given contest.",
                "operationId": "get_v4_contest_problemset",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given contest problemset document in PDF, HTML or TXT format",
                        "content": {
                            "application/pdf": {},
                            "text/plain": {},
                            "text/html": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Contests"
                ],
                "summary": "Set the problemset document for the given contest.",
                "operationId": "put_v4_put_contest_problemset",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "problemset"
                                ],
                                "properties": {
                                    "problemset": {
                                        "description": "The problemset document to use, as either text/html, text/plain or application/pdf.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting problemset document succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Contests"
                ],
                "summary": "Set the problemset document for the given contest.",
                "operationId": "post_v4_post_contest_problemset",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "problemset"
                                ],
                                "properties": {
                                    "problemset": {
                                        "description": "The problemset document to use, as either text/html, text/plain or application/pdf.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting problemset document succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Contests"
                ],
                "summary": "Delete the problemset document for the given contest.",
                "operationId": "delete_v4_delete_contest_problemset",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleting problemset document succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/contest-yaml": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Get the contest in YAML format.",
                "operationId": "get_v4_app_api_contest_getcontestyaml",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The contest in YAML format",
                        "content": {
                            "application/x-yaml": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/state": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Get the current contest state",
                "operationId": "get_v4_app_api_contest_getconteststate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The contest state",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContestState"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/event-feed": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Get the event feed for the given contest.",
                "operationId": "get_v4_app_api_contest_geteventfeed",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "name": "since_id",
                        "in": "query",
                        "description": "Only get events after this event",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "nullable": true
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "Types to filter the event feed on",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "description": "A single type",
                                "type": "string"
                            },
                            "default": null,
                            "nullable": true
                        }
                    },
                    {
                        "name": "stream",
                        "in": "query",
                        "description": "Whether to stream the output or stop immediately",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "since_token",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "nullable": true
                        }
                    },
                    {
                        "name": "strict",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The events",
                        "content": {
                            "application/x-ndjson": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "op": {
                                                "type": "string"
                                            },
                                            "data": {
                                                "type": "object"
                                            },
                                            "time": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/status": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "summary": "Get general status information.",
                "operationId": "get_v4_app_api_contest_getstatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "General status information for the given contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContestStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/samples.zip": {
            "get": {
                "tags": [
                    "Contests"
                ],
                "operationId": "get_v4_samples_data_zip",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "cid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The problem samples, statement & attachments as a ZIP archive",
                        "content": {
                            "application/zip": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/executables/{id}": {
            "get": {
                "tags": [
                    "Executables"
                ],
                "summary": "Get the executable with the given ID.",
                "operationId": "get_v4_app_api_executable_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the requested executable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Base64-encoded executable contents",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/version": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Get the current API version",
                "operationId": "get_v4_app_api_generalinfo_getversion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The current API version information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiVersion"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/info": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Get information about the API and DOMjudge",
                "operationId": "get_v4_app_api_generalinfo_getinfo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "strict",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the API and DOMjudge",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiInfo"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Get information about the API and DOMjudge",
                "operationId": "get_v4_api_root",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "strict",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the API and DOMjudge",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiInfo"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/status": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Get general status information",
                "operationId": "get_v4_app_api_generalinfo_getstatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "General status information for the currently active contests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExtendedContestStatus"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/user": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Get information about the currently logged in user.",
                "operationId": "get_v4_app_api_generalinfo_getuser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the logged in user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/config": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Get configuration variables.",
                "operationId": "get_v4_app_api_generalinfo_getdatabaseconfiguration",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Get only this configuration variable",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "nullable": true
                        }
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The configuration variables",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "General"
                ],
                "summary": "Update configuration variables.",
                "operationId": "put_v4_app_api_generalinfo_updateconfiguration",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {},
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "The full configuration after change",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "An error occurred while saving the configuration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/config/check": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Check the DOMjudge configuration.",
                "operationId": "get_v4_app_api_generalinfo_getconfigcheck",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the various checks performed, no problems found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "250": {
                        "description": "Result of the various checks performed, warnings found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "260": {
                        "description": "Result of the various checks performed, errors found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/country-flags/{countryCode}/{size}": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Get the flag for the given country.",
                "operationId": "get_v4_app_api_generalinfo_countryflag",
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "path",
                        "description": "The ISO 3166-1 alpha-3 code for the country to get the flag for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "path",
                        "description": "Preferred aspect ratio as <int>x<int>, currently only 1x1 and 4x3 are available.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given country flag in SVG format",
                        "content": {
                            "image/svg+xml": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/problems": {
            "post": {
                "tags": [
                    "Problems",
                    "General"
                ],
                "summary": "Add a problem without linking it to a contest.",
                "operationId": "post_v4_app_api_generalinfo_addproblem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "zip"
                                ],
                                "properties": {
                                    "zip": {
                                        "description": "The problem archive to import",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "problem": {
                                        "description": "Optional: problem id to update.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the ID of the imported problem and any messages produced",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "problem_id": {
                                            "description": "The ID of the imported problem",
                                            "type": "integer"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "description": "Messages produced while adding problems",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Get all the groups for this contest.",
                "operationId": "get_v4_app_api_group_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "public",
                        "in": "query",
                        "description": "Only show public groups, even for users with more permissions",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the groups for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamCategory"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Add a new group",
                "operationId": "post_v4_app_api_group_add",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamCategoryPost"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the added group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamCategory"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/groups/{id}": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Get the given group for this contest",
                "operationId": "get_v4_app_api_group_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given group for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamCategory"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Update an existing group or create one with the given ID",
                "operationId": "put_v4_app_api_group_update",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamCategoryPut"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the updated / added group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamCategory"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/judgehosts": {
            "get": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Get judgehosts.",
                "operationId": "get_v4_app_api_judgehost_getjudgehosts",
                "parameters": [
                    {
                        "name": "hostname",
                        "in": "query",
                        "description": "Only show the judgehost with the given hostname",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The judgehosts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Judgehost"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Add a new judgehost to the list of judgehosts.",
                "description": "Also restarts (and returns) unfinished judgings.",
                "operationId": "post_v4_app_api_judgehost_createjudgehost",
                "responses": {
                    "200": {
                        "description": "The returned unfinished judgings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "jobid": {
                                                "type": "integer"
                                            },
                                            "submitid": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgehosts/{hostname}": {
            "put": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Update the configuration of the given judgehost.",
                "operationId": "put_v4_app_api_judgehost_updatejudgehost",
                "parameters": [
                    {
                        "name": "hostname",
                        "in": "path",
                        "description": "The hostname of the judgehost to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "enabled": {
                                        "description": "The new enabled state of the judgehost",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The modified judgehost",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Judgehost"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgehosts/update-judging/{hostname}/{judgetaskid}": {
            "put": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Update the given judging for the given judgehost.",
                "operationId": "put_v4_app_api_judgehost_updatejudging",
                "parameters": [
                    {
                        "name": "hostname",
                        "in": "path",
                        "description": "The hostname of the judgehost that wants to update the judging",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "judgetaskid",
                        "in": "path",
                        "description": "The ID of the judgetask to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "compile_success": {
                                        "description": "Whether compilation was successful",
                                        "type": "boolean"
                                    },
                                    "output_compile": {
                                        "description": "The compile output",
                                        "type": "string"
                                    },
                                    "entry_point": {
                                        "description": "The determined entrypoint",
                                        "type": "string"
                                    },
                                    "compile_metadata": {
                                        "description": "The (base64-encoded) metadata of the compilation.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "When the judging has been updated"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgehosts/add-debug-info/{hostname}/{judgeTaskId}": {
            "post": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Add back debug info.",
                "operationId": "post_v4_app_api_judgehost_adddebuginfo",
                "parameters": [
                    {
                        "name": "hostname",
                        "in": "path",
                        "description": "The hostname of the judgehost that wants to add the debug info",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "judgeTaskId",
                        "in": "path",
                        "description": "The ID of the judgetask to add",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When the debug info has been added"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgehosts/add-judging-run/{hostname}/{judgeTaskId}": {
            "post": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Add one JudgingRun. When relevant, finalize the judging.",
                "operationId": "post_v4_app_api_judgehost_addjudgingrun",
                "parameters": [
                    {
                        "name": "hostname",
                        "in": "path",
                        "description": "The hostname of the judgehost that wants to add the judging run",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "judgeTaskId",
                        "in": "path",
                        "description": "The ID of the judgetask to add",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "runresult",
                                    "runtime",
                                    "output_run",
                                    "output_diff",
                                    "output_error",
                                    "output_system"
                                ],
                                "properties": {
                                    "runresult": {
                                        "description": "The result of the run",
                                        "type": "string"
                                    },
                                    "runtime": {
                                        "description": "The runtime of the run",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "output_run": {
                                        "description": "The (base64-encoded) output of the run",
                                        "type": "string"
                                    },
                                    "output_diff": {
                                        "description": "The (base64-encoded) output diff of the run",
                                        "type": "string"
                                    },
                                    "output_error": {
                                        "description": "The (base64-encoded) error output of the run",
                                        "type": "string"
                                    },
                                    "output_system": {
                                        "description": "The (base64-encoded) system output of the run",
                                        "type": "string"
                                    },
                                    "team_message": {
                                        "description": "The (base64-encoded) message to the team of the run",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "description": "The (base64-encoded) metadata of the run",
                                        "type": "string"
                                    },
                                    "compare_metadata": {
                                        "description": "The (base64-encoded) metadata of the validator",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "When the judging run has been added"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgehosts/internal-error": {
            "post": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Internal error reporting (back from judgehost).",
                "operationId": "post_v4_app_api_judgehost_internalerror",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "description",
                                    "judgehostlog",
                                    "disabled"
                                ],
                                "properties": {
                                    "description": {
                                        "description": "The description of the internal error",
                                        "type": "string"
                                    },
                                    "judgehostlog": {
                                        "description": "The log of the judgehost",
                                        "type": "string"
                                    },
                                    "disabled": {
                                        "description": "The object to disable in JSON format",
                                        "type": "string"
                                    },
                                    "judgetaskid": {
                                        "description": "The ID of the judgeTask that was being worked on",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The ID of the created internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgehosts/get_files/{type}/{id}": {
            "get": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Get files for a given type and id.",
                "operationId": "get_v4_app_api_judgehost_getfiles",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type to get files for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The files for the submission, testcase or script.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JudgehostFile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgehosts/get_version_commands/{judgetaskid}": {
            "get": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Get version commands for a given compile script.",
                "operationId": "get_v4_app_api_judgehost_getversioncommands",
                "parameters": [
                    {
                        "name": "judgetaskid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns optionally compiler and runner version commands.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "compiler_version_command": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "runner_version_command": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgehosts/check_versions/{judgetaskid}": {
            "put": {
                "tags": [
                    "Judgehosts"
                ],
                "operationId": "put_v4_app_api_judgehost_checkversions",
                "parameters": [
                    {
                        "name": "judgetaskid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "hostname",
                                    "compiler",
                                    "runner"
                                ],
                                "properties": {
                                    "problem": {
                                        "description": "Checking versions for the given hostname.",
                                        "type": "string"
                                    },
                                    "compiler": {
                                        "description": "Reported compiler version.",
                                        "type": "string"
                                    },
                                    "runner": {
                                        "description": "Reported runner version.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updates internal versions, does not check them yet."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgehosts/fetch-work": {
            "post": {
                "tags": [
                    "Judgehosts"
                ],
                "summary": "Fetch work tasks.",
                "operationId": "post_v4_app_api_judgehost_getjudgetasks",
                "parameters": [
                    {
                        "name": "hostname",
                        "in": "query",
                        "description": "Hostname of the judgehost requesting work.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_batchsize",
                        "in": "query",
                        "description": "Maximum number of tasks to return.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the workarray.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JudgeTask"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/judgements": {
            "get": {
                "tags": [
                    "Judgements"
                ],
                "summary": "Get all the judgements for this contest.",
                "operationId": "get_v4_app_api_judgement_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "result",
                        "in": "query",
                        "description": "Only show judgements with the given result",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "submission_id",
                        "in": "query",
                        "description": "Only show judgements for the given submission",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the judgements for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JudgingWrapper"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgements": {
            "get": {
                "tags": [
                    "Judgements"
                ],
                "summary": "Get all the judgements for this contest.",
                "operationId": "get_v4_app_api_judgement_list_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "result",
                        "in": "query",
                        "description": "Only show judgements with the given result",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "submission_id",
                        "in": "query",
                        "description": "Only show judgements for the given submission",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the judgements for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JudgingWrapper"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/judgements/{id}": {
            "get": {
                "tags": [
                    "Judgements"
                ],
                "summary": "Get the given judgement for this contest.",
                "operationId": "get_v4_app_api_judgement_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given judgement for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JudgingWrapper"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/judgements/{id}": {
            "get": {
                "tags": [
                    "Judgements"
                ],
                "summary": "Get the given judgement for this contest.",
                "operationId": "get_v4_app_api_judgement_single_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given judgement for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JudgingWrapper"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/judgement-types": {
            "get": {
                "tags": [
                    "Judgement types"
                ],
                "summary": "Get all the judgement types for this contest.",
                "operationId": "get_v4_app_api_judgementtype_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "cid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the judgement types for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JudgementType"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/judgement-types/{id}": {
            "get": {
                "tags": [
                    "Judgement types"
                ],
                "summary": "Get the given judgement type for this contest.",
                "operationId": "get_v4_app_api_judgementtype_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "cid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given judgement type for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JudgementType"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                }
            }
        },
        "/api/v4/languages": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get all the languages for this contest.",
                "operationId": "get_v4_app_api_language_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the languages for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Language"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Languages"
                ],
                "operationId": "post_v4_app_api_language_configurelanguages",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configure all specified languages."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/languages": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get all the languages for this contest.",
                "operationId": "get_v4_app_api_language_list_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the languages for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Language"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/languages/{id}": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get the given language for this contest.",
                "operationId": "get_v4_app_api_language_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given language for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Language"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/languages/{id}": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get the given language for this contest.",
                "operationId": "get_v4_app_api_language_single_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given language for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Language"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/languages/{id}/executable": {
            "post": {
                "tags": [
                    "Languages"
                ],
                "summary": "Update the executable of a language.",
                "operationId": "post_v4_app_api_language_updateexecutableactions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update the executable for a given language."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/metrics/prometheus": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "Metrics of this installation for use by Prometheus.",
                "operationId": "get_v4_app_api_metrics_prometheus",
                "responses": {
                    "200": {
                        "description": "Metrics of this installation for use by Prometheus",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get all the organizations for this contest.",
                "operationId": "get_v4_app_api_organization_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Only show organizations for the given country",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the organizations for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamAffiliation"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Add a new organization.",
                "operationId": "post_v4_app_api_organization_add",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddOrganization"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the added organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamAffiliation"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get all the organizations for this contest.",
                "operationId": "get_v4_app_api_organization_list_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Only show organizations for the given country",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the organizations for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamAffiliation"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Add a new organization.",
                "operationId": "post_v4_app_api_organization_add_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddOrganization"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the added organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamAffiliation"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/organizations/{id}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get the given organization for this contest.",
                "operationId": "get_v4_app_api_organization_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given organization for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamAffiliation"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/organizations/{id}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get the given organization for this contest.",
                "operationId": "get_v4_app_api_organization_single_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given organization for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamAffiliation"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/organizations/{id}/logo": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get the logo for the given organization.",
                "operationId": "get_v4_organization_logo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given organization logo in PNG, JPG or SVG format",
                        "content": {
                            "image/png": {},
                            "image/jpeg": {},
                            "image/svg+xml": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Set the logo for the given organization.",
                "operationId": "put_v4_put_organization_logo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "logo"
                                ],
                                "properties": {
                                    "logo": {
                                        "description": "The logo to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting logo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Set the logo for the given organization.",
                "operationId": "post_v4_post_organization_logo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "logo"
                                ],
                                "properties": {
                                    "logo": {
                                        "description": "The logo to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting logo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete the logo for the given organization.",
                "operationId": "delete_v4_delete_organization_logo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleting logo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/organizations/{id}/logo": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get the logo for the given organization.",
                "operationId": "get_v4_no_contest_organization_logo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given organization logo in PNG, JPG or SVG format",
                        "content": {
                            "image/png": {},
                            "image/jpeg": {},
                            "image/svg+xml": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Set the logo for the given organization.",
                "operationId": "put_v4_app_api_organization_setlogo_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "logo"
                                ],
                                "properties": {
                                    "logo": {
                                        "description": "The logo to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting logo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Set the logo for the given organization.",
                "operationId": "post_v4_app_api_organization_setlogo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "logo"
                                ],
                                "properties": {
                                    "logo": {
                                        "description": "The logo to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting logo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete the logo for the given organization.",
                "operationId": "delete_v4_app_api_organization_deletelogo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleting logo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/printing/team": {
            "post": {
                "tags": [
                    "Printing",
                    "Printing"
                ],
                "summary": "Send a file to the system printer as a team.",
                "operationId": "post_v4_app_api_print_printasteam",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PrintTeam"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the ID of the imported problem and any messages produced",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Whether printing was successful",
                                            "type": "boolean"
                                        },
                                        "output": {
                                            "description": "The print command output",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "An error occurred while processing the print job",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/problems/add-data": {
            "post": {
                "tags": [
                    "Problems"
                ],
                "summary": "Add one or more problems.",
                "operationId": "post_v4_app_api_problem_addproblems",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "description": "The problems.yaml or problems.json file to import.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the API ID's of the added problems."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/problems": {
            "get": {
                "tags": [
                    "Problems"
                ],
                "summary": "Get all the problems for this contest.",
                "operationId": "get_v4_app_api_problem_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the problems for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContestProblem"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Problems"
                ],
                "summary": "Add a problem to this contest.",
                "operationId": "post_v4_app_api_problem_addproblem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "zip"
                                ],
                                "properties": {
                                    "zip": {
                                        "description": "The problem archive to import",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "problem": {
                                        "description": "Optional: problem id to update.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the ID of the imported problem and any messages produced",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "problem_id": {
                                            "description": "The ID of the imported problem",
                                            "type": "integer"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "description": "Messages produced while adding problems",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/problems/{id}": {
            "get": {
                "tags": [
                    "Problems"
                ],
                "summary": "Get the given problem for this contest.",
                "operationId": "get_v4_app_api_problem_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given problem for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContestProblem"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Problems"
                ],
                "summary": "Link an existing problem to this contest.",
                "operationId": "put_v4_app_api_problem_linkproblem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContestProblemPut"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the linked problem for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContestProblem"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Problems"
                ],
                "summary": "Unlink a problem from this contest.",
                "operationId": "delete_v4_app_api_problem_unlinkproblem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Problem unlinked from contest succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/problems/{id}/statement": {
            "get": {
                "tags": [
                    "Problems"
                ],
                "summary": "Get the statement for given problem for this contest.",
                "operationId": "get_v4_app_api_problem_statement",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given problem statement for this contest",
                        "content": {
                            "application/pdf": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/runs": {
            "get": {
                "tags": [
                    "Runs"
                ],
                "summary": "Get all the runs for this contest.",
                "operationId": "get_v4_app_api_run_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "first_id",
                        "in": "query",
                        "description": "Only show runs starting from this ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_id",
                        "in": "query",
                        "description": "Only show runs until this ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "judging_id",
                        "in": "query",
                        "description": "Only show runs for this judgement",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the number of returned runs to this amount",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the runs for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JudgingRunWrapper"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/runs/{id}": {
            "get": {
                "tags": [
                    "Runs"
                ],
                "summary": "Get the given run for this contest.",
                "operationId": "get_v4_app_api_run_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given run for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JudgingRunWrapper"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/scoreboard": {
            "get": {
                "tags": [
                    "Scoreboard"
                ],
                "summary": "Get the scoreboard for this contest.",
                "operationId": "get_v4_app_api_scoreboard_getscoreboard",
                "parameters": [
                    {
                        "name": "allteams",
                        "in": "query",
                        "description": "Also show invisible teams. Requires jury privileges",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Get the scoreboard for only this category",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": null,
                            "nullable": true
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Get the scoreboard for only this country (in ISO 3166-1 alpha-3 format)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null,
                            "nullable": true
                        }
                    },
                    {
                        "name": "affiliation",
                        "in": "query",
                        "description": "Get the scoreboard for only this affiliation",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": null,
                            "nullable": true
                        }
                    },
                    {
                        "name": "public",
                        "in": "query",
                        "description": "Show publicly visible scoreboard, even for users with more permissions",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": null,
                            "nullable": true
                        }
                    },
                    {
                        "name": "sortorder",
                        "in": "query",
                        "description": "The sort order to get the scoreboard for. If not given, uses the lowest sortorder",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": null,
                            "nullable": true
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "strict",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the scoreboard",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scoreboard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/submissions": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Get all the submissions for this contest.",
                "operationId": "get_v4_app_api_submission_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "language_id",
                        "in": "query",
                        "description": "Only show submissions for the given language",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the submissions for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Submission"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/submissions": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Get all the submissions for this contest.",
                "operationId": "get_v4_app_api_submission_list_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "language_id",
                        "in": "query",
                        "description": "Only show submissions for the given language",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the submissions for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Submission"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Add a submission to this contest.",
                "operationId": "post_v4_app_api_submission_addsubmission",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddSubmission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "When submitting was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Submission"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/submissions/{id}": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Get the given submission for this contest.",
                "operationId": "get_v4_app_api_submission_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given submission for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Submission"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/submissions/{id}": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Get the given submission for this contest.",
                "operationId": "get_v4_app_api_submission_single_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given submission for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Submission"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Add a submission to this contest.",
                "operationId": "put_v4_app_api_submission_addsubmission_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddSubmission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "When submitting was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Submission"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/submissions/{id}/files": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Get the files for the given submission as a ZIP archive.",
                "operationId": "get_v4_submission_files",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The files for the submission as a ZIP archive",
                        "content": {
                            "application/zip": {}
                        }
                    },
                    "500": {
                        "description": "An error occurred while creating the ZIP file"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/submissions/{id}/files": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Get the files for the given submission as a ZIP archive.",
                "operationId": "get_v4_submission_files_root",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The files for the submission as a ZIP archive",
                        "content": {
                            "application/zip": {}
                        }
                    },
                    "500": {
                        "description": "An error occurred while creating the ZIP file"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/submissions/{id}/source-code": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Get the source code of all the files for the given submission.",
                "operationId": "get_v4_app_api_submission_getsubmissionsourcecode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The files for the submission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SourceCode"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get all the teams for this contest.",
                "operationId": "get_v4_app_api_team_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Only show teams for the given category",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "affiliation",
                        "in": "query",
                        "description": "Only show teams for the given affiliation / organization",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "public",
                        "in": "query",
                        "description": "Only show visible teams, even for users with more permissions",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the teams for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Team"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Add a new team.",
                "operationId": "post_v4_app_api_team_add",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTeam"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the added team",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get all the teams for this contest.",
                "operationId": "get_v4_app_api_team_list_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Only show teams for the given category",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "affiliation",
                        "in": "query",
                        "description": "Only show teams for the given affiliation / organization",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "public",
                        "in": "query",
                        "description": "Only show visible teams, even for users with more permissions",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the teams for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Team"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Add a new team.",
                "operationId": "post_v4_app_api_team_add_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTeam"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the added team",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/teams/{id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get the given team for this contest.",
                "operationId": "get_v4_app_api_team_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given team for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/teams/{id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get the given team for this contest.",
                "operationId": "get_v4_app_api_team_single_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given team for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/contests/{cid}/teams/{id}/photo": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get the photo for the given team.",
                "operationId": "get_v4_team_photo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given team photo in PNG, JPG or SVG format",
                        "content": {
                            "image/png": {},
                            "image/jpeg": {},
                            "image/svg+xml": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Teams"
                ],
                "summary": "Set the photo for the given team.",
                "operationId": "put_v4_put_team_photo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "photo"
                                ],
                                "properties": {
                                    "photo": {
                                        "description": "The photo to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting photo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Set the photo for the given team.",
                "operationId": "post_v4_post_team_photo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "photo"
                                ],
                                "properties": {
                                    "photo": {
                                        "description": "The photo to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting photo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Teams"
                ],
                "summary": "Delete the photo for the given team.",
                "operationId": "delete_v4_delete_team_photo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleting photo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/teams/{id}/photo": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get the photo for the given team.",
                "operationId": "get_v4_no_contest_team_photo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given team photo in PNG, JPG or SVG format",
                        "content": {
                            "image/png": {},
                            "image/jpeg": {},
                            "image/svg+xml": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Teams"
                ],
                "summary": "Set the photo for the given team.",
                "operationId": "put_v4_app_api_team_setphoto_1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "photo"
                                ],
                                "properties": {
                                    "photo": {
                                        "description": "The photo to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting photo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Set the photo for the given team.",
                "operationId": "post_v4_app_api_team_setphoto",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "photo"
                                ],
                                "properties": {
                                    "photo": {
                                        "description": "The photo to use.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Setting photo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Teams"
                ],
                "summary": "Delete the photo for the given team.",
                "operationId": "delete_v4_app_api_team_deletephoto",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/cid"
                    },
                    {
                        "$ref": "#/components/parameters/strict"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleting photo succeeded"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/users/groups": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add one or more groups.",
                "operationId": "post_v4_app_api_user_addgroups",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "tsv": {
                                        "description": "The groups.tsv files to import.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "json": {
                                        "description": "The groups.json files to import.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns a (currently meaningless) status message."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/users/organizations": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add one or more organizations.",
                "operationId": "post_v4_app_api_user_addorganizations",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "json"
                                ],
                                "properties": {
                                    "json": {
                                        "description": "The organizations.json files to import.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns a (currently meaningless) status message."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/users/teams": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add one or more teams.",
                "operationId": "post_v4_app_api_user_addteams",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "tsv": {
                                        "description": "The teams.tsv files to import.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "json": {
                                        "description": "The teams.json files to import.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns a (currently meaningless) status message."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/users/accounts": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add accounts to teams.",
                "operationId": "post_v4_app_api_user_addaccounts",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "tsv": {
                                        "description": "The accounts.tsv files to import.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "json": {
                                        "description": "The accounts.json files to import.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "yaml": {
                                        "description": "The accounts.yaml files to import.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PostAccountResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all the users.",
                "operationId": "get_v4_app_api_user_list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/idlist"
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "description": "Only show users for the given team",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the users for this contest",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Add a new user.",
                "operationId": "put_v4_app_api_user_add",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the added user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/v4/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get the given user.",
                "operationId": "get_v4_app_api_user_single",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the given user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing User",
                "operationId": "patch_v4_app_api_user_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the added user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ClarificationPost": {
                "required": [
                    "text"
                ],
                "properties": {
                    "text": {
                        "description": "The body of the clarification to send",
                        "type": "string"
                    },
                    "problem_id": {
                        "description": "The problem the clarification is for",
                        "type": "string",
                        "nullable": true
                    },
                    "reply_to_id": {
                        "description": "The ID of the clarification this clarification is a reply to",
                        "type": "string",
                        "nullable": true
                    },
                    "from_team_id": {
                        "description": "The team the clarification came from. Only used when adding a clarification as admin",
                        "type": "string",
                        "nullable": true
                    },
                    "to_team_id": {
                        "description": "The team the clarification must be sent to. Only used when adding a clarification as admin",
                        "type": "string",
                        "nullable": true
                    },
                    "time": {
                        "description": "The time to use for the clarification. Only used when adding a clarification as admin",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "id": {
                        "description": "The ID to use for the clarification. Only used when adding a clarification as admin and only allowed with PUT",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PatchContest": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "start_time": {
                        "description": "The new start time of the contest",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "scoreboard_thaw_time": {
                        "description": "The new unfreeze (thaw) time of the contest",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "force": {
                        "description": "Force overwriting the start_time even when in next 30s or the scoreboard_thaw_time when already set or too much in the past",
                        "type": "boolean",
                        "default": false
                    }
                },
                "type": "object"
            },
            "TeamCategoryPost": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "How to name this group on the scoreboard",
                        "type": "string"
                    },
                    "hidden": {
                        "description": "Show this group on the scoreboard?",
                        "type": "boolean",
                        "default": false
                    },
                    "icpc_id": {
                        "description": "The ID in the ICPC CMS for this group",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "sortorder": {
                        "description": "Bundle groups with the same sortorder, create different scoreboards per sortorder",
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "nullable": true
                    },
                    "color": {
                        "description": "Color to use for teams in this group on the scoreboard",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "allow_self_registration": {
                        "description": "Whether to allow self registration for this group",
                        "type": "boolean",
                        "default": false
                    }
                },
                "type": "object"
            },
            "TeamCategoryPut": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "How to name this group on the scoreboard",
                        "type": "string"
                    },
                    "hidden": {
                        "description": "Show this group on the scoreboard?",
                        "type": "boolean",
                        "default": false
                    },
                    "icpc_id": {
                        "description": "The ID in the ICPC CMS for this group",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "sortorder": {
                        "description": "Bundle groups with the same sortorder, create different scoreboards per sortorder",
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "nullable": true
                    },
                    "color": {
                        "description": "Color to use for teams in this group on the scoreboard",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "allow_self_registration": {
                        "description": "Whether to allow self registration for this group",
                        "type": "boolean",
                        "default": false
                    },
                    "id": {
                        "description": "The ID of the group. Only allowed with PUT requests",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AddOrganization": {
                "properties": {
                    "id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "shortname": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "formal_name": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "icpc_id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PrintTeam": {
                "required": [
                    "name"
                ],
                "properties": {
                    "original_name": {
                        "description": "The original name of the file",
                        "type": "string"
                    },
                    "language": {
                        "description": "The programming language of the file contents",
                        "type": "string",
                        "nullable": true
                    },
                    "file_contents": {
                        "description": "The (base64-encoded) contents of the source file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "ContestProblemPut": {
                "required": [
                    "label"
                ],
                "properties": {
                    "label": {
                        "description": "The label of the problem to add to the contest",
                        "type": "string"
                    },
                    "color": {
                        "description": "Human readable color of the problem to add. Will be overwritten by `rgb` if supplied",
                        "type": "string",
                        "nullable": true
                    },
                    "rgb": {
                        "description": "Hexadecimal RGB value of the color of the problem to add. Overrules `color` if supplied",
                        "type": "string",
                        "nullable": true
                    },
                    "points": {
                        "description": "The number of points for the problem to add. Defaults to 1",
                        "type": "integer",
                        "default": 1
                    },
                    "lazy_eval_results": {
                        "description": "Whether to use lazy evaluation for this problem. Defaults to the global setting",
                        "type": "integer",
                        "default": 0
                    }
                },
                "type": "object"
            },
            "AddSubmission": {
                "properties": {
                    "problem": {
                        "description": "The problem to submit a solution for",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "problem_id": {
                        "description": "The problem to submit a solution for",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "language": {
                        "description": "The language to submit a solution in",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "language_id": {
                        "description": "The language to submit a solution in",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "team_id": {
                        "description": "The team to submit a solution for. Only used when adding a submission as admin",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "user_id": {
                        "description": "The user to submit a solution for. Only used when adding a submission as admin",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "time": {
                        "description": "The time to use for the submission. Only used when adding a submission as admin",
                        "type": "string",
                        "format": "date-time",
                        "default": null,
                        "nullable": true
                    },
                    "entry_point": {
                        "description": "The entry point for the submission. Required for languages requiring an entry point",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "id": {
                        "description": "The ID to use for the submission. Only used when adding a submission as admin and only allowed with PUT",
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "files": {
                        "description": "The base64 encoded ZIP file to submit",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddSubmissionFile"
                        },
                        "default": null,
                        "maxItems": 1,
                        "minItems": 1,
                        "nullable": true
                    },
                    "code": {
                        "description": "The file(s) to submit",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AddTeam": {
                "properties": {
                    "id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "icpc_id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "label": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "group_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "display_name": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "public_description": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "members": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "location": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AddTeamLocation"
                            }
                        ]
                    },
                    "organization_id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AddUser": {
                "required": [
                    "username",
                    "name",
                    "roles"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "username": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true
                    },
                    "ip": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "team_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    }
                },
                "type": "object"
            },
            "UpdateUser": {
                "required": [
                    "roles"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "username": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "default": null,
                        "nullable": true
                    },
                    "ip": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "default": null,
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "default": null,
                        "nullable": true
                    },
                    "team_id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Access": {
                "properties": {
                    "capabilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccessEndpoint"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "last_login_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_api_login_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "first_login_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "team": {
                        "type": "string",
                        "nullable": true
                    },
                    "team_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "roles": {
                        "title": "Get the roles of this user as an array of strings",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "title": "Get the type of this user for the CCS Specs Contest API",
                        "type": "string",
                        "nullable": true
                    },
                    "userid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string",
                        "default": ""
                    },
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_ip": {
                        "type": "string",
                        "nullable": true
                    },
                    "ip": {
                        "type": "string",
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "type": "object"
            },
            "Award": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "citation": {
                        "type": "string"
                    },
                    "team_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "Balloon": {
                "properties": {
                    "balloonid": {
                        "type": "integer"
                    },
                    "time": {
                        "type": "string"
                    },
                    "problem": {
                        "type": "string"
                    },
                    "contestproblem": {
                        "$ref": "#/components/schemas/ContestProblem"
                    },
                    "team": {
                        "type": "string"
                    },
                    "teamid": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "string"
                    },
                    "affiliation": {
                        "type": "string"
                    },
                    "affiliationid": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "string"
                    },
                    "categoryid": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ContestProblem"
                        }
                    },
                    "awards": {
                        "type": "string"
                    },
                    "done": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Clarification": {
                "properties": {
                    "time": {
                        "type": "string",
                        "nullable": true
                    },
                    "contest_time": {
                        "type": "string"
                    },
                    "problem_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "reply_to_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "from_team_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "to_team_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "clarid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "text": {
                        "type": "string"
                    },
                    "answered": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "type": "object"
            },
            "Contest": {
                "properties": {
                    "formal_name": {
                        "type": "string"
                    },
                    "scoreboard_type": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "scoreboard_thaw_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "scoreboard_freeze_duration": {
                        "type": "string",
                        "nullable": true
                    },
                    "banner": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageFile"
                        }
                    },
                    "problemset": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileWithName"
                        }
                    },
                    "cid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "shortname": {
                        "type": "string",
                        "default": ""
                    },
                    "allow_submit": {
                        "type": "boolean",
                        "default": true
                    },
                    "runtime_as_score_tiebreaker": {
                        "type": "boolean",
                        "default": false
                    },
                    "warning_message": {
                        "type": "string",
                        "nullable": true
                    },
                    "penalty_time": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ContestState": {
                "properties": {
                    "started": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "ended": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "frozen": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "thawed": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "finalized": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "end_of_updates": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ContestStatus": {
                "properties": {
                    "num_submissions": {
                        "type": "integer"
                    },
                    "num_queued": {
                        "type": "integer"
                    },
                    "num_judging": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ApiVersion": {
                "properties": {
                    "api_version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ApiInfo": {
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "version_url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/ApiInfoProvider"
                    },
                    "domjudge": {
                        "$ref": "#/components/schemas/DomJudgeApiInfo"
                    }
                },
                "type": "object"
            },
            "ExtendedContestStatus": {
                "properties": {
                    "cid": {
                        "type": "string"
                    },
                    "num_submissions": {
                        "type": "integer"
                    },
                    "num_queued": {
                        "type": "integer"
                    },
                    "num_judging": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TeamCategory": {
                "required": [
                    "name"
                ],
                "properties": {
                    "hidden": {
                        "type": "boolean"
                    },
                    "categoryid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "icpc_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "sortorder": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "color": {
                        "type": "string",
                        "nullable": true
                    },
                    "allow_self_registration": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "type": "object"
            },
            "Judgehost": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9_\\-.]*"
                    },
                    "enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "polltime": {
                        "type": "string",
                        "nullable": true
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "type": "object"
            },
            "JudgehostFile": {
                "properties": {
                    "filename": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "is_executable": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "JudgeTask": {
                "properties": {
                    "submitid": {
                        "type": "string"
                    },
                    "judgetaskid": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "default": "judging_run"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "jobid": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "compile_script_id": {
                        "type": "string"
                    },
                    "run_script_id": {
                        "type": "string"
                    },
                    "compare_script_id": {
                        "type": "string"
                    },
                    "testcase_id": {
                        "type": "string"
                    },
                    "testcase_hash": {
                        "type": "string"
                    },
                    "compile_config": {
                        "type": "string"
                    },
                    "run_config": {
                        "type": "string"
                    },
                    "compare_config": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "JudgingWrapper": {
                "properties": {
                    "start_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "start_contest_time": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "end_contest_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "max_run_time": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "submission_id": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "valid": {
                        "type": "boolean",
                        "default": true
                    },
                    "judgement_type_id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "JudgementType": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "penalty": {
                        "type": "boolean"
                    },
                    "solved": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Language": {
                "properties": {
                    "compile_executable_hash": {
                        "type": "string",
                        "nullable": true
                    },
                    "compiler": {
                        "$ref": "#/components/schemas/Command"
                    },
                    "runner": {
                        "$ref": "#/components/schemas/Command"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "filter_compiler_files": {
                        "type": "boolean",
                        "default": true
                    },
                    "allow_judge": {
                        "type": "boolean",
                        "default": true
                    },
                    "time_factor": {
                        "type": "number",
                        "format": "double",
                        "default": 1,
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    "entry_point_required": {
                        "type": "boolean",
                        "default": false
                    },
                    "entry_point_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TeamAffiliation": {
                "required": [
                    "name",
                    "formal_name"
                ],
                "properties": {
                    "shortname": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageFile"
                        }
                    },
                    "affilid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "icpc_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "formal_name": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "country_flag": {
                        "title": "This field gets filled by the team affiliation visitor with a data transfer\nobject that represents the country flag",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageFile"
                        },
                        "default": []
                    }
                },
                "type": "object"
            },
            "ContestProblem": {
                "required": [
                    "label"
                ],
                "properties": {
                    "short_name": {
                        "type": "string"
                    },
                    "rgb": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "time_limit": {
                        "type": "number",
                        "format": "float",
                        "default": 0,
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    "statement": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileWithName"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "default": "Unknown name"
                    }
                },
                "type": "object"
            },
            "JudgingRunWrapper": {
                "properties": {
                    "run_time": {
                        "type": "number",
                        "format": "float"
                    },
                    "time": {
                        "type": "string"
                    },
                    "contest_time": {
                        "type": "string"
                    },
                    "judgement_id": {
                        "type": "string"
                    },
                    "ordinal": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "judgement_type_id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Scoreboard": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "time": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "contest_time": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "state": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ContestState"
                            }
                        ]
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Row"
                        },
                        "default": []
                    }
                },
                "type": "object"
            },
            "Submission": {
                "properties": {
                    "language_id": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "contest_time": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "problem_id": {
                        "type": "string"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileWithName"
                        }
                    },
                    "submitid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "entry_point": {
                        "type": "string",
                        "nullable": true
                    },
                    "import_error": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SourceCode": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "submission_id": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Team": {
                "properties": {
                    "location": {
                        "$ref": "#/components/schemas/TeamLocation"
                    },
                    "organization_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "hidden": {
                        "type": "boolean"
                    },
                    "group_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "affiliation": {
                        "type": "string",
                        "nullable": true
                    },
                    "nationality": {
                        "type": "string",
                        "nullable": true
                    },
                    "photo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageFile"
                        }
                    },
                    "teamid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "icpc_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "display_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "public_description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AddSubmissionFile": {
                "properties": {
                    "data": {
                        "description": "The base64 encoded submission files",
                        "type": "string"
                    },
                    "mime": {
                        "description": "The mime type of the file. Should be application/zip",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AddTeamLocation": {
                "properties": {
                    "description": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AccessEndpoint": {
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ImageFile": {
                "properties": {
                    "href": {
                        "type": "string"
                    },
                    "mime": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "width": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FileWithName": {
                "properties": {
                    "href": {
                        "type": "string"
                    },
                    "mime": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApiInfoProvider": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "build_date": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "DomJudgeApiInfo": {
                "properties": {
                    "apiversion": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    },
                    "environment": {
                        "type": "string"
                    },
                    "doc_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Command": {
                "properties": {
                    "version": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "version_command": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Row": {
                "properties": {
                    "rank": {
                        "type": "integer"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "score": {
                        "$ref": "#/components/schemas/Score"
                    },
                    "problems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Problem"
                        }
                    }
                },
                "type": "object"
            },
            "TeamLocation": {
                "properties": {
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Score": {
                "properties": {
                    "num_solved": {
                        "type": "integer"
                    },
                    "total_time": {
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "total_runtime": {
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Problem": {
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "problem_id": {
                        "type": "string"
                    },
                    "num_judged": {
                        "type": "integer"
                    },
                    "num_pending": {
                        "type": "integer"
                    },
                    "solved": {
                        "type": "boolean"
                    },
                    "time": {
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "first_to_solve": {
                        "type": "boolean",
                        "default": null,
                        "nullable": true
                    },
                    "runtime": {
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "fastest_submission": {
                        "type": "boolean",
                        "default": null,
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "NotFound": {
                "description": "The specified resource was not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "Unauthenticated": {
                "description": "Unauthenticated, authentication is missing"
            },
            "Unauthorized": {
                "description": "Unauthorized, user needs an additional role",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "InvalidResponse": {
                "description": "The specified resource identifier is malformed",
                "content": {
                    "application/json": {
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "text/html": {
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "PostAccountResponse": {
                "description": "Returns a (currently meaningless) status message.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "parameters": {
            "cid": {
                "name": "cid",
                "in": "path",
                "description": "The contest ID",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "examples": {
                    "demo": {
                        "summary": "The Demo contest",
                        "value": "demo"
                    },
                    "demoprac": {
                        "summary": "The Demo practice contest",
                        "value": "demoprac"
                    }
                }
            },
            "balloonId": {
                "name": "balloonId",
                "in": "path",
                "description": "The balloonId to mark as done.",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "examples": {
                    "balloon": {
                        "summary": "First balloon of the contest",
                        "value": 1
                    }
                }
            },
            "id": {
                "name": "id",
                "in": "path",
                "description": "The ID of the entity",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "examples": {
                    "generic": {
                        "summary": "Most Entities are integer indexed",
                        "value": "1"
                    },
                    "participants": {
                        "summary": "Participants group",
                        "value": "3"
                    },
                    "award": {
                        "summary": "Default Award entity",
                        "value": "winner"
                    },
                    "executable": {
                        "summary": "Compile executable for python3",
                        "value": "py3"
                    }
                }
            },
            "idlist": {
                "name": "ids[]",
                "in": "query",
                "description": "Filter the objects to get on this list of ID's",
                "explode": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "description": "A single ID",
                        "type": "string"
                    }
                }
            },
            "strict": {
                "name": "strict",
                "in": "query",
                "description": "Whether to only include CCS compliant properties in the response",
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "basicAuth": []
        }
    ],
    "tags": [
        {
            "name": "Access"
        },
        {
            "name": "Accounts"
        },
        {
            "name": "Awards"
        },
        {
            "name": "Balloons"
        },
        {
            "name": "Clarifications"
        },
        {
            "name": "Contests"
        },
        {
            "name": "Executables"
        },
        {
            "name": "General"
        },
        {
            "name": "Problems"
        },
        {
            "name": "Groups"
        },
        {
            "name": "Judgehosts"
        },
        {
            "name": "Judgements"
        },
        {
            "name": "Judgement types"
        },
        {
            "name": "Languages"
        },
        {
            "name": "Metrics"
        },
        {
            "name": "Organizations"
        },
        {
            "name": "Printing"
        },
        {
            "name": "Runs"
        },
        {
            "name": "Scoreboard"
        },
        {
            "name": "Submissions"
        },
        {
            "name": "Teams"
        },
        {
            "name": "Users"
        }
    ]
}